knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("data/main.csv")
data
knitr::opts_chunk$set(echo = TRUE)
# Import libraries
library(dplyr)
library(ggplot2)
library(stargazer)
library(plm)
library(data.table)
library(ggthemes)
library(pwr)
library(MatchIt)
# Import libraries
library(dplyr)
library(ggplot2)
library(stargazer)
library(plm)
library(data.table)
library(ggthemes)
library(pwr)
library(MatchIt)
data <- read.csv("data/main.csv")
data
data <- read.csv("data/main.csv", encoding = "UTF-8")
data
data %>%
ggplot(aes(log(avgunitprice), color = factor(formal), fill = factor(formal))) +
geom_density(alpha = 0.1) +
scale_color_discrete(name = "Type", labels = c("Formal", "Informal")) +
scale_fill_discrete(name = "Type", labels = c("Formal", "Informal")) +
theme_bw() +
xlab("Log of average unit price") +
ggtitle("Price distribution of the sample properties") +
xlim(7.5, 13)
# preparing the data
data <- read.csv("data/main.csv", encoding = "Unicode")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
# preparing the data
data <- read.csv("data/main.csv", encoding = "Unicode")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "utf-8")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data %>%
filter(bldgtype == "高层")
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data %>%
filter(bldgtype != "高层")
# preparing the data
data <- read.csv("data/main.csv")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data %>%
filter(bldgtype != "高层")
# preparing the data
data <- read.csv2("data/main.csv")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data %>%
filter(bldgtype != "高层")
# preparing the data
data <- read.csv("data/main.csv")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data %>%
filter(bldgtype != "高层")
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data %>%
filter(bldgtype != "高层")
# preparing the data
data <- read.csv("data/main.csv", fileEncoding = "UTF-8")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data %>%
filter(bldgtype != "高层")
# preparing the data
data <- read.csv("data/main.csv", fileEncoding = "UTF-8")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data
# preparing the data
data <- read.csv("data/main.csv", encoding =  = "UTF-8")
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8", na.strings = c("N/A","","NA"))
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "ASCII")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
# data <- data %>%
#   mutate(formal = ifelse(formal == 1, "yes", "no")) %>%
#   mutate()
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
data <- data %>%
mutate(bldgtype = gsub("<([[:alpha:]][[:alnum:]]*)(.[^>]*)>([.^<]*)", "\\3", bldgtype))
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
data <- data %>%
mutate(bldgtype = gsub("<([[:alpha:]][[:alnum:]]*)(.[^>]*)>([.^<]*)", "", bldgtype))
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
data <- data %>%
mutate(bldgtype = gsub("<U+00A0>", "", bldgtype))
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
data
# preparing the data
data <- read.csv("data/main.csv", encoding = "UTF-8")
data
# preparing the data
data <- read.csv("data/main.csv")
data
data %>%
mutate(formal = ifelse(formal == 0, "yes", "no")) %>%
mutate(nearpubschlevel = recode_factor("普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province"))
data %>%
mutate(formal = ifelse(formal == 0, "yes", "no")) %>%
mutate(nearpubschlevel = recode_factor(nearpubschlevel, "普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province"))
data %>%
mutate(formal = ifelse(formal == 0, "yes", "no")) %>%
mutate(nearpubschlevel = recode_factor(nearpubschlevel,
"普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province"))
data %>%
group_by(bldgtype) %>%
summarise(count = n())
data %>%
# group_by(bldgtype) %>%
# summarise(count = n())
filter(is.na(bldgtype) == TRUE)
data %>%
# group_by(bldgtype) %>%
# summarise(count = n())
filter(is.null(bldgtype) == TRUE)
data %>%
# group_by(bldgtype) %>%
# summarise(count = n())
filter(bldgtype == "")
data %>%
group_by(bldgtype) %>%
summarise(count = n())
data %>%
mutate(formal = ifelse(formal == 0, "yes", "no")) %>%
mutate(nearpubschlevel = recode_factor(nearpubschlevel,
"普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province")) %>%
filter(bldgtype != "" & bldgtype != "#N/A")
data %>%
mutate(formal = ifelse(formal == 0, "yes", "no")) %>%
mutate(nearpubschlevel = recode_factor(nearpubschlevel,
"普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province"))
# filter(bldgtype != "" & bldgtype != "#N/A")
data %>%
mutate(formal = ifelse(formal == 0, "yes", "no")) %>%
mutate(nearpubschlevel = recode_factor(nearpubschlevel,
"普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province")) %>%
filter(bldgtype != "" & bldgtype != "#N/A") %>%
mutate(bldgtype = ifelse(bldgtype == "小高" | bldgtype == "小高高层", "小高层", bldgtype))
data %>%
mutate(formal = ifelse(formal == 0, "yes", "no")) %>%
mutate(nearpubschlevel = recode_factor(nearpubschlevel,
"普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province")) %>%
filter(bldgtype != "" & bldgtype != "#N/A") %>%
mutate(bldgtype = ifelse(bldgtype == "小高" | bldgtype == "小高高层", "小高层", bldgtype)) %>%
mutate(bldgtype = recode_factor(bldgtype,
"多层" = "low-rise",
"小高层" = "mid-rise",
"高层" = "high-rise"))
data %>%
mutate(formal = ifelse(formal == 0, "yes", "no")) %>%
mutate(nearpubschlevel = recode_factor(nearpubschlevel,
"普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province")) %>%
mutate(nearpubschlevel = recode_factor(nearprischlevel,
"普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province")) %>%
filter(bldgtype != "" & bldgtype != "#N/A") %>%
mutate(bldgtype = ifelse(bldgtype == "小高" | bldgtype == "小高高层", "小高层", bldgtype)) %>%
mutate(bldgtype = recode_factor(bldgtype,
"多层" = "low-rise",
"小高层" = "mid-rise",
"高层" = "high-rise"))
data <- data %>%
mutate(formal = ifelse(formal == 0, "yes", "no")) %>%
mutate(nearpubschlevel = recode_factor(nearpubschlevel,
"普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province")) %>%
mutate(nearpubschlevel = recode_factor(nearprischlevel,
"普通" = "regular",
"区一级" = "district",
"市一级" = "city",
"省一级" = "province")) %>%
filter(bldgtype != "" & bldgtype != "#N/A") %>%
mutate(bldgtype = ifelse(bldgtype == "小高" | bldgtype == "小高高层", "小高层", bldgtype)) %>%
mutate(bldgtype = recode_factor(bldgtype,
"多层" = "low-rise",
"小高层" = "mid-rise",
"高层" = "high-rise"))
data
data %>%
ggplot(aes(log(avgunitprice), color = factor(formal), fill = factor(formal))) +
geom_density(alpha = 0.1) +
scale_color_discrete(name = "Type", labels = c("Formal", "Informal")) +
scale_fill_discrete(name = "Type", labels = c("Formal", "Informal")) +
theme_bw() +
xlab("Log of average unit price") +
ggtitle("Price distribution of the sample properties") +
xlim(7.5, 13)
data %>%
ggplot(aes(log(avgunitprice), color = factor(formal), fill = factor(formal))) +
geom_density(alpha = 0.1) +
scale_color_discrete(name = "Type", labels = c("Informal", "Formal")) +
scale_fill_discrete(name = "Type", labels = c("Informal", "Formal")) +
theme_bw() +
xlab("Log of average unit price") +
ggtitle("Price distribution of the sample properties") +
xlim(7.5, 13)
# reorder factor variables
data$nearpubschlevel <- factor(data$nearpubschlevel, levels = c("regular", "district", "city", "province"))
data$nearprischlevel <- factor(data$nearpubschlevel, levels = c("regular", "district", "city", "province"))
data$bldgtype <- factor(data$nearpubschlevel, levels = c("low-rise", "mid-rise", "high-rise"))
